package javaapplication3;
import java.util.Scanner;
import java.util.ArrayList;
abstract class Stack{
    int tos;
    Stack()
    {
         tos=-1;
    }
    abstract void push(int n);
    abstract int pop();
    abstract void display();
}

class StaticStack extends Stack
{
    Scanner s = new Scanner(System.in);
    int n = s.nextInt();
    int arr[] = new int[n];
    
    @Override
    void push(int item)
    {
        if(tos==n-1)
        {
            System.out.println("\nFAILED !!");
            System.out.println("Stack is full");
        }
        else
        { 
            int x = ++tos;
            arr[x] = item;
            System.out.println("\n"+item+" is pushed !!");
        }
    }
    @Override
    int pop()
    {
        if(tos<0)
        {
            System.out.println("Stack is empty!!");
            return -1;
        }
        else
        {
            System.out.println(arr[tos]+" is popped!!");
            return arr[tos--];
        }// return 0;
    }
    @Override
    void display()
    {
        if(tos<0)
        {
            System.out.println("Stack is empty!!");
        }
        else
        {
            System.out.println("** STATIC STACK **");
            for(int i=0; i<n;i++)
            {
                System.out.println(arr[i]+"\t");
            }
        }
    }
   
}
class DynamicStack extends Stack
{
    Scanner s = new Scanner(System.in);
    int m = s.nextInt();
    
    ArrayList<Integer> ar = new ArrayList<>(m);
    @Override
    void push(int n) {
      // int tos= -1;
        if(tos==m-1)
        {
            System.out.println("\nFAILED !!");
            System.out.println("Stack is full");
        }
        else
        {
            ar.add(++tos,n);
            System.out.println(n+" is pushed !!");
        }
    }

    @Override
    int pop() {
       if(tos==-1)
       {
           System.out.println("Stack is Empty !!");
           return -1;
       }
       else
       {
           System.out.println(ar.get(tos)+" is popped !!");
           return(ar.remove(tos--));
           
       }
       
    }

    @Override
    void display() {
        if(tos<0)
       {
           System.out.println("Stack is Empty !!");
       }
        else
        {
            System.out.println("**DYNAMIC STACK **");
            for(int i=0; i<ar.size();i++)
            {
                System.out.println(ar.get(i)+"\n");
            }
        }
    }
    
}
public class JavaApplication3 {
    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) 
    {
        Scanner s1=new Scanner(System.in);
        System.out.println("\t\tStack program\n");
        System.out.println("\t  1. Static Stack using array");
        System.out.println("\t  2. Dynamic stack using array list");
        System.out.println("\t  3. Exit");
        int x = s1.nextInt();
        switch(x)
        {
            case 1:     System.out.println("Enter the Size of static stack");
                        StaticStack ob1 = new StaticStack();
                        char ch;
                        do{
                            System.out.println("\t\tStatic Stack Operations\n");
                            System.out.println("\t  1. Push");
                            System.out.println("\t  2. Pop");
                            System.out.println("\t  3. Display");
                            System.out.println("\t  4. Exit");
      
                            int m = s1.nextInt();
                            switch(m)
                            {
                                case 1  :   System.out.println("Enter element to be push : ");
                                            int item = s1.nextInt();
                                            ob1.push(item);
                                            break;
                                case 2  :   ob1.pop();
                                            break;
                                case 3  :   ob1.display();
                                            break;
                                case 4  :   break;
                                default :   System.out.println("Wrong input !!");
                            }
                            System.out.println("Do you want to continue ?? (y/n)");
                            ch=s1.next().charAt(0);
                        }while(ch=='y');
                    break;
                    
            case 2 :    System.out.println("Enter the Size of dynamic stack");
                        DynamicStack ob2 = new DynamicStack();
                        char ch1;
                        do{    
                            System.out.println("\t\tDynamic Stack Operations 2\n");
                            System.out.println("\t  1. Push");
                            System.out.println("\t  2. Pop");
                            System.out.println("\t  3. Display");
                            System.out.println("\t  4. Exit");
                            int p= s1.nextInt();
                            
                            switch(p)
                            {
                                case 1  :   System.out.println("Enter element to be push : ");
                                            int item1 = s1.nextInt();
                                            ob2.push(item1);
                                            break;
                                case 2  :   ob2.pop();
                                            break;
                                case 3  :   ob2.display();
                                            break;
                                case 4  :   break;
                                default :   System.out.println("Wrong input !!");
                            }
                            System.out.println("Do you want to continue ?? (y/n)");
                            ch1=s1.next().charAt(0);
                        }while(ch1=='y');
                        break;
            default :   System.out.println("Wrong input !!");   
        }
    }
}
